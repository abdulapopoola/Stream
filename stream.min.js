/*! stream-js - v0.5.0 - 2015-12-01 !
      _                                    __   __    
 ___ | |_  _ __   ___   __ _  _ __ ___     \ \ / _\   
/ __|| __|| '__| / _ \ / _` || '_ ` _ \     \ \\ \    
\__ \| |_ | |   |  __/| (_| || | | | | | /\_/ /_\ \   
|___/ \__||_|    \___| \__,_||_| |_| |_| \___/ \__/   
                                                      
 
*/ 
function streamFail(a){throw new Error(a)}function Stream(a,b){this.streamFirst=a,this.streamRest=b||function(){return new Stream(null,null)}}Stream.prototype.head=function(){return this.isEmpty()&&streamFail("Stream is empty!"),this.streamFirst},Stream.prototype.tail=function(){return this.isEmpty()&&streamFail("Stream is empty!"),this.streamRest()},Stream.prototype.isEmpty=function(){return null==this.streamFirst},Stream.prototype.hasEmptyTail=function(){if(null==this.streamRest)return!0;try{this.tail()}catch(a){return!0}return!1},Stream.prototype.append=function(a){if(this.isEmpty())return a;var b=this;return new Stream(this.head(),function(){return b.tail().append(a)})},Stream.prototype.pick=function(a){if(!a||this.isEmpty())return new Stream(null,null);var b=this;return new Stream(this.head(),function(){return b.tail().pick(a-1)})},Stream.prototype.elementAt=function(a){if(null!=a){for(var b=this;a>0;){if(b.isEmpty()||b.hasEmptyTail())return;b=b.tail(),a--}return b.head()}},Stream.prototype.length=function(){for(var a=0,b=this;!b.isEmpty();)a++,b=b.tail();return a},Stream.prototype.reduce=function(a,b){var c=this;return c.isEmpty()?b:(null==b&&(b=c.head(),c=c.tail()),c.tail().reduce(a,a(b,c.head())))},Stream.prototype.sum=function(){return this.reduce(function(a,b){return a+b},0)},Stream.prototype.map=function(a){null==a&&streamFail("Mapping function has to be defined");var b=this;return new Stream(a(this.head()),function(){return b.tail().map(a)})},Stream.prototype.filter=function(a){if(this.isEmpty())return this;var b=this.head(),c=this.tail();return a(b)?new Stream(b,function(){return c.filter(a)}):c.filter(a)},Stream.prototype.contains=function(a){for(var b=this;!b.isEmpty();){if(b.head()===a)return!0;b=b.tail()}return!1},Stream.prototype.walk=function(a){for(var b=this;!b.isEmpty();){if(a(b.head()),b.hasEmptyTail())return;b=b.tail()}},Stream.prototype.print=function(a){var b=this.pick(a);b.walk(function(a){console.log(a)})},Stream.prototype.remove=function(a){for(var b=this;a>0;){if(b.isEmpty())return new Stream(null,null);b=b.tail(),a--}return new Stream(b.head(),function(){return b.tail()})},Stream.prototype.toArray=function(){var a=[],b=function(b){a.push(b)};return this.walk(b),a},Stream.add=function(a,b){return a.isEmpty()?b:b.isEmpty()?a:new Stream(a.head()+b.head(),function(){return Stream.add(a.tail(),b.tail())})},Stream.zip=function(){for(var a=[].slice.call(arguments),b=[],c=0,d=a.length;d>c;c++){var e=a[c];e.isEmpty()||b.push(e.head())}return new Stream(b,function(){for(var b=[],c=0,d=a.length;d>c;c++){var e=a[c];e.hasEmptyTail()||b.push(e.tail())}return Stream.zip.apply(null,b)})},Stream.create=function(){if(0===arguments.length)return new Stream(null,null);var a=[].slice.call(arguments,1);return new Stream(arguments[0],function(){return Stream.create.apply(null,a)})},Stream.fromArray=function(a){return Stream.create.apply(null,a)},Stream.fromInterval=function(a,b){return a||(a=0),b&&a!==b?new Stream(a,function(){return Stream.fromInterval(a+1,b)}):new Stream(a,null)},Stream.from=function(a){return a||(a=0),new Stream(a,function(){return Stream.from(a+1)})},Stream.upTo=function(a){return Stream.fromInterval(0,a)},Stream.Ones=function(){return new Stream(1,Stream.Ones)},Stream.NaturalNumbers=function(){return new Stream(1,function(){return Stream.add(Stream.NaturalNumbers(),Stream.Ones())})};